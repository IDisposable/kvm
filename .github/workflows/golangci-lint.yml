---
name: golangci-lint
on:
  push:
    paths:
      - "go.sum"
      - "go.mod"
      - "**.go"
      - ".github/workflows/golangci-lint.yml"
      - ".golangci.yml"
  pull_request:

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  golangci:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Go
        uses: actions/setup-go@fa96338abe5531f6e34c5cc0bbe28c1a533d5505 # v4.2.1
        with:
          go-version: 1.24.4
      - name: Extract versions from Makefile
        id: versions
        run: |
          ALSA_VERSION=$(grep '^ALSA_VERSION' Makefile | cut -d'=' -f2 | tr -d ' ?')
          OPUS_VERSION=$(grep '^OPUS_VERSION' Makefile | cut -d'=' -f2 | tr -d ' ?')
          echo "alsa_version=$ALSA_VERSION" >> $GITHUB_OUTPUT
          echo "opus_version=$OPUS_VERSION" >> $GITHUB_OUTPUT
          echo "Extracted ALSA_VERSION: $ALSA_VERSION"
          echo "Extracted OPUS_VERSION: $OPUS_VERSION"
      - name: Cache audio dependencies
        id: cache-audio-deps
        uses: actions/cache@v4
        with:
          path: ~/.jetkvm
          key: audio-deps-${{ runner.os }}-alsa-${{ steps.versions.outputs.alsa_version }}-opus-${{ steps.versions.outputs.opus_version }}
      - name: Setup development environment
        if: steps.cache-audio-deps.outputs.cache-hit != 'true'
        run: make dev_env
        env:
          ALSA_VERSION: ${{ steps.versions.outputs.alsa_version }}
          OPUS_VERSION: ${{ steps.versions.outputs.opus_version }}
      - name: Create empty resource directory
        run: |
          mkdir -p static && touch static/.gitkeep
      - name: Lint
        uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd # v7.0.0
        with:
          args: --verbose
          version: v2.0.2
        env:
          CGO_ENABLED: 1
          SRCDIR: ${{ github.workspace }}
          ALSA_VERSION: ${{ steps.versions.outputs.alsa_version }}
          OPUS_VERSION: ${{ steps.versions.outputs.opus_version }}
